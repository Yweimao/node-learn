1. server开发和前端开发的区别: 

  . 服务稳定性 (PM2 进程守候 保证服务的稳定性)
  . 考虑内存和cup(优化和扩展)   (stream写日志, 使用redis存session)
  . 日志记录  
  . 安全  (登录验证, 预防xss攻击和sql注入)
  . 集群和服务拆分  
  
2. 开发环境搭建 
  
  . 从零开始搭建, 不使用任何框架
  . 使用nodemon监测文件变化, 自动重启node
  . 使用cross-env 设置环境变量, 兼容max linux和windows
  
3. 接口规范
  
	博客相关接口: 
  
	获取博客列表  /api/blog/list    get
	获取博客详情  /api/blog/detail  get
	新建一篇博客  /api/blog/new     post
	更新一篇博客  /api/blog/update  post
	删除一篇博客  /api/blog/del     post
	
	用户相关接口: 
	
	用户登录接口  /api/user/login   post

4. 常见的sql 语句


use myblog;
-- show tables;


-- 表单插入 
-- INSERT INTO users(username, `PASSWORD`, realname) VALUES('lisi', '123', '李四')

-- 表单查询
-- SELECT * FROM users;
-- SELECT id, username FROM users;
 
-- 并集查询 and
-- SELECT * FROM users WHERE username ='zhangsan' AND `password` = '123'


-- 交集查询 OR
-- SELECT * FROM users WHERE username ='zhangsan' or `password` = '123'

-- 模糊查询
-- SELECT * FROM users WHERE `password` LIKE '%123%';

-- 正序查询
-- SELECT * FROM users WHERE `password` LIKE '%123%' ORDER BY id;

-- 倒序查询
-- SELECT * FROM users WHERE `password` LIKE '%123%' ORDER BY id DESC;

-- 更新
-- UPDATE users SET realname='李四2' WHERE username='lisi'

-- 删除
-- DELETE FROM users WHERE username='lisi'

-- SELECT * FROM users WHERE state='0';  --  <>不等于符号
-- UPDATE users SET state='1' WHERE username ='lisi';  -- 软删除

